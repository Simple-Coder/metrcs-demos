<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>metrcs-demos</artifactId>
        <groupId>com.metrics</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>metrics-demo232</artifactId>

    <properties>
        <spring-boot.version>2.3.2.RELEASE</spring-boot.version>
        <hutool-all.version>5.7.21</hutool-all.version>
        <prometheus.verion>1.1.3</prometheus.verion>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool-all.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <dependency>
            <groupId>io.github.lyh200</groupId>
            <artifactId>dynamic-tp-spring-boot-starter-apollo</artifactId>
            <version>1.0.7</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>metrics-demo-232</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.sohu.ipseeker.wrapper.IpSeekerWrapperApplication</mainClass>
                    <addResources>false</addResources>
                    <executable>true</executable>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <id>1</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>            <!--GAV坐标(G组织id，A项目id，V版本号)-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1
                </version>            <!--配置: 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其 他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不 支持的语法)，会存在target不同于source的情况-->
                <configuration>                <!--源代码使用的JDK版本-->
                    <source>1.8</source>                <!-- 需要生成的目标class文件的编译版本 -->
                    <target>1.8</target>                <!-- 字符集编码，防止中文乱码 -->
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>